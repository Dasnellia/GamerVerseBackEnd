// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Categoria {
  id        Int     @id @default(autoincrement())
  nombre    String  @db.VarChar(50)
  juegos    Juego[]
}

model Usuario {
  id        Int      @id @default(autoincrement()) 
  correo    String   @db.VarChar(100)
  password  String   @db.VarChar(100) // Store the hashed password here
  nombre    String   @db.VarChar(50)
  token     String   @db.VarChar(50)
  estado    Int
  admin     Boolean
  fechaCreacion DateTime @default(now())
  calificaciones Calificacion[]
  ventas    Venta[]
}

model Juego {
  id        Int      @id @default(autoincrement())
  nombre    String   @db.VarChar(100)
  precio    String   @db.VarChar(100)
  oferta    Int
  estado    Int
  categoriaId Int
  categoria Categoria @relation(fields: [categoriaId], references: [id])
  calificaciones Calificacion[]
  ventas    Venta[]
  plataformas JuegoxPlataforma[]
}

model Plataforma {
  id        Int      @id @default(autoincrement())
  nombre    String   @db.VarChar(100)
  juegos    JuegoxPlataforma[]
}

model Calificacion {
  id              Int  
  usuarioId       Int 
  juegoId         Int
  categoriaId     Int
  valoracion      String @db.VarChar(100)
  comentario      String @db.VarChar(1000)
  usuario         Usuario @relation(fields: [usuarioId], references: [id])
  juego           Juego   @relation(fields: [juegoId], references: [id])
  @@id([id, usuarioId, juegoId, categoriaId])
}

model Venta {
  id              Int  
  usuarioId       Int
  juegoId         Int
  fecha           DateTime
  codigo          String @db.VarChar(30)
  montoPagado     String @db.VarChar(100)
  usuario         Usuario @relation(fields: [usuarioId], references: [id])
  juego           Juego   @relation(fields: [juegoId], references: [id])
  @@id([id, usuarioId, juegoId])
}

model Noticia {
  id        Int     @id @default(autoincrement())
  titulo    String  @db.VarChar(100)
  texto     String  @db.VarChar(1000)
  activo    Int
}

model JuegoxPlataforma {
  plataformaId Int
  juegoId      Int
  plataforma   Plataforma @relation(fields: [plataformaId], references: [id])
  juego        Juego      @relation(fields: [juegoId], references: [id])
  @@id([plataformaId, juegoId])
}